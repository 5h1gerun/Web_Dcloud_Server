#仕様書
ファイルパスは：/mnt/ssd/share/Code/Web_Discord_Server の中で開発
仮想環境を使用：/home/shigerun/miniforge3/envs/kaka/bin/python
・大まかな仕様
    ・GoogleDriveのようなCloudWebサーバーをラズパイで立ち上げる
    ・ラズパイ5、SSD付き
    ・WebサーバーはDiscordBotが立ち上げている
    ・Nginxを利用
    ・https通信で、duckDNSで作成したドメインを利用する
    ・ポート番号は9040
・DiscordのBotの仕様
    ・まず大前提でWebサーバを立ち上げるロジックを組み込む
    ・WebサーバのログインID(Discordのユーザ名)、パスワードはDiscordのbotがランダム生成（簡単に特定されないもの）
    ・Ｗｅｂサーバのリンク踏んだら新規登録ページからDiscordの鯖の招待リンクを張り付けて、鯖に入ってきたらその人に上記のパスワードとIDをDMで送信
    ・鯖入室時にその人にしか見れない専用チャンネルを作成
    ・Webサーバーからファイルをアップロードできるが、Discordからもアップロードできるように
    ・データ管理はSQLite
    ・SQLインジェクションなどで攻撃されて不正アクセスされないように厳重なセキュリティ管理を徹底すること
    ・データベースにパスワードを格納するときに、scrypt を利用して保存すること
 ・Discordコマンドの概要
    ・bot.tree.commandでコマンドツリー化
    ・コマンドで自分が何のデータをアップロードしているのかを画像で確認して、それを取り出せるリストボックスを表示させるコマンドを作成
    ・上記のコマンドでもし容量の都合で取り出せない場合、URLリンクを送ることでDiscordの容量上限の問題を回避
    ・URLリンクは外部共有を許可するか、共有を許可しないか選べるシステムを導入（Discord又はHTMLから選べる）
    ・アップロードしたファイルの画像を単体で消す機能と、全削除をする機能を実装
    ・コマンドで鯖内の人を選択してファイルを共有できる機能を実装（GitHubのプロジェクト開発を共有するような機能）
    ・ファイル共有コマンドを実行した場合該当する人にしか見られない専用チャンネルを作成すること

#システムの流れ

リンクにDiscord鯖に飛ぶリンク貼り付け（一定期間立つと使えなくなってしますので自動更新ロジック導入すること）
                ↓
鯖に入ってきたら、DM送信（上記のパスワード送信、DM許可してない場合がある可能性があるので送信拒否された場合許可するよう促して、DMを再送信をするコマンド使用するように伝える）


"""sudo systemctl restart web_discord"""
"""journalctl -u web_discord -n 50 -f"""